name: Public Release

on:
  push:
    tags: '*.*.\d+'
    paths-ignore:
      - "package.json"
      - "package-lock.json"
      - "*.md"

      
jobs:
  build-sdk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_ACTIONS }}
          ref: master
          fetch-depth: 0

      - uses: actions/setup-node@v2
        with:
          node-version: 14.17.6
          registry-url: 'https://registry.npmjs.org'
      - run: npm install

      - name: Get Previous tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: 1.0.0

      - name: Bump Version
        run: |
            chmod +x ./scripts/bump_version.sh
            ./scripts/bump_version.sh "${{ steps.previoustag.outputs.tag }}"

      - name: Commit changes
        run: |
            git config user.name ${{ github.actor }}
            git config user.email ${{ github.actor }}@users.noreply.github.com
            git add package.json
            git commit -m "[AUTOMATED] Public Release - ${{ steps.previoustag.outputs.tag }}"
            git push origin

      - name: Set PROD_IFRAME_SECURE_SITE with version
        run: |
          VERSION=$(echo "${{ secrets.PROD_IFRAME_SECURE_SITE }}" | sed -E "s|/version/|/v${{ steps.previoustag.outputs.tag }}/|")
          echo "PROD_IFRAME_SECURE_SITE=$VERSION" >> $GITHUB_ENV

      - name: npm build
        run: npm run build-browser-sdk
        env:
          IFRAME_SECURE_ORGIN: ${{ secrets.PROD_IFRAME_SECURE_ORIGIN }}
          IFRAME_SECURE_SITE: ${{ env.PROD_IFRAME_SECURE_SITE }}

      - name: npm build iframe
        run: npm run build-iframe
        env:
          IFRAME_SECURE_ORGIN: ${{ secrets.PROD_IFRAME_SECURE_ORIGIN }}
          IFRAME_SECURE_SITE: ${{ env.PROD_IFRAME_SECURE_SITE }}
 
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.PROD_AWS_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_ACCESS_KEY_SECRET }}
          AWS_REGION: ${{ secrets.PROD_AWS_REGION }}
          SOURCE_DIR: "dist/v1"
          DEST_DIR: "v${{ steps.previoustag.outputs.tag }}/"

      - name: build node-sdk
        env:
          IFRAME_SECURE_ORGIN: ${{ secrets.PROD_IFRAME_SECURE_ORIGIN }}
          IFRAME_SECURE_SITE: ${{ env.PROD_IFRAME_SECURE_SITE }}
        run: |
          npm run build:types 
          npm run build-node-sdk
          
      - name: publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

          
  aws-cf-invalidate:
    runs-on: ubuntu-latest
    needs: [build-sdk]
    steps: 
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0      
    - name: Configure AWS credentials Prod account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.PROD_AWS_ACCESS_KEY_SECRET }}
        aws-region: ${{ secrets.PROD_AWS_REGION }}
    - name: invalidate-cf-distribution
      run: aws cloudfront create-invalidation --distribution-id ${{ secrets.PROD_CF_DISTRIBUTION_ID }} --paths "/*"