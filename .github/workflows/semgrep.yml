name: Semgrep

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # Give write permission to PRs
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Semgrep and jq
        run: |
          sudo apt install python3-venv jq
          python3 -m venv .venv
          .venv/bin/pip install semgrep

      - name: Run Semgrep
        run: |
          source .venv/bin/activate
          semgrep --config auto --severity ERROR --json-output=results.json --no-error
          cat results.json | jq .results > pretty-results.json

      - name: Display Raw Semgrep JSON Output
        run: |
         echo "Displaying raw Semgrep results..."
         cat pretty-results.json

      - name: Add comment on PR if findings are found
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const prNumber = context.payload.pull_request.number;
            const results = JSON.parse(fs.readFileSync('pretty-results.json', 'utf8'));
            
            // Check for findings with severity "ERROR"
            const criticalVulnsFound = results.some(result => result.severity === "ERROR");
            
            let comment;
            if (criticalVulnsFound) {
              // Comment if critical vulnerabilities (ERROR severity) are found
              comment = `**Semgrep Findings:** Issues with Error level severity are found (Error is High severity in Semgrep), Please resolve the issues before merging.`;
            } else {
              // Comment if no critical vulnerabilities are found
              comment = `**Semgrep Findings:** No vulnerabilities found. Good to merge.`;
            }

            // Ensure the comment is posted only if findings exist
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: prNumber,
              body: comment
            });
