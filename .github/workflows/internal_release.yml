name: Internal Release

on:
  push:
    tags-ignore:
      - '*.*'
    paths-ignore:
      - "package.json"
      - "package-lock.json"
      - "*.md"
    branches:
      - release/*

      
jobs:
  build-sdk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_ACTIONS }}
          fetch-depth: 0
          
      - uses: actions/setup-node@v1
        with:
          node-version: 14.17.6
      - run: npm install

      - name: Get Previous tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: 1.0.0

      - name: Bump Version
        run: |
          chmod +x ./scripts/bump_version.sh
          ./scripts/bump_version.sh "${{ steps.previoustag.outputs.tag }}" "$(git rev-parse --short "$GITHUB_SHA")"

      - name: Set INTERNAL_RELEASE_VERSION
        run: |
          echo "INTERNAL_RELEASE_VERSION=${{ steps.previoustag.outputs.tag }}-dev.$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV

      - name: Commit changes
        run: |
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com
          git add package.json
          git commit -m "[AUTOMATED] Private Release ${{ env.INTERNAL_RELEASE_VERSION }}"
          git push origin -f

      - name: npm build
        run: npm run build-browser-sdk
        env:
          IFRAME_SECURE_ORGIN: ${{ secrets.IFRAME_SECURE_ORGIN }}
          IFRAME_SECURE_SITE: "v${{  env.INTERNAL_RELEASE_VERSION }}/${{ secrets.IFRAME_SECURE_SITE }}"

      - name: npm build iframe
        run: npm run build-iframe
        env:
          IFRAME_SECURE_ORGIN: ${{ secrets.IFRAME_SECURE_ORGIN }}
          IFRAME_SECURE_SITE: "v${{ env.INTERNAL_RELEASE_VERSION  }}/${{ secrets.IFRAME_SECURE_SITE }}"

      - name: Configure AWS credentials Blitz account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BLITZ_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BLITZ_AWS_ACCESS_KEY_SECRET }}
          aws-region: ${{ secrets.BLITZ_AWS_REGION }}

      - name: Set latest tag
        run: |
          mkdir tags
          echo "v${{ env.INTERNAL_RELEASE_VERSION }}" > tags/latest

      - name: Deploy latest tag to S3
        run:
          aws s3 cp tags s3://${{secrets.BLITZ_AWS_BUCKET_NAME}}

      - name: Remove latest tag
        run: |
          rm -rf tags

      - name: Deploy to S3
        run:
          aws s3 cp dist/v1 s3://${{secrets.BLITZ_AWS_BUCKET_NAME}}/v${{  env.INTERNAL_RELEASE_VERSION  }}  --recursive

      - name: build node-sdk
        env:
          IFRAME_SECURE_ORGIN: ${{ secrets.IFRAME_SECURE_ORGIN }}
          IFRAME_SECURE_SITE: "v${{   env.INTERNAL_RELEASE_VERSION  }}/${{ secrets.IFRAME_SECURE_SITE }}"
        run: |
          curl -u ${{ secrets.JFROG_USERNAME }}:${{ secrets.JFROG_PASSWORD }} https://prekarilabs.jfrog.io/prekarilabs/api/npm/auth/ > ~/.npmrc
          npm config set registry https://prekarilabs.jfrog.io/prekarilabs/api/npm/npm/
          npm config set unsafe-perm true
          npm run build:types 
          npm run build-node-sdk
          
      - name: publish to jfrog
        run: |
            npm publish 

      - name: invalidate-cf-distribution
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.BLITZ_CF_DISTRIBUTION_ID }} --paths "/*"
